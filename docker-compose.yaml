version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: go_insight_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME:-go_insight}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./internal/db/migrations:/internal/db/migrations
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-go_insight}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  go-insight:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: go_insight_app
    restart: unless-stopped
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Secrets & deployment-specific only
      DB_PASS: ${DB_PASS:-password}
      API_KEY: ${API_KEY:-your-secure-api-key-here}
      JWT_SECRET: ${JWT_SECRET:-}
      
      # Environment-specific
      DB_HOST: postgres
      PORT: ${PORT:-8080}
      ENVIRONMENT: ${ENVIRONMENT:-production}
      
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${PORT:-8080}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  pgdata:
    driver: local

networks:
  default:
    name: go_insight_network